#!/bin/bash

if [ -z $3 ]; then
    echo "Usage: $0 [DATALIST] [FOLDER] [FINAL]"
    echo "[DATALIST]: A text file of data cards list, must same with the list when you run the job."
    echo "[FOLDER]: The name of results folder, which include the job's folders generated by lxplus."
    echo "[FINAL]: The name of final results folder, which is decided by user."
    exit 1
fi

WORK=$PWD
FOLDERLIST=$WORK/folder_inputList
DATALIST=$WORK/$1
NEWDATALIST=$WORK/new_data_inputList
FOLDER=$WORK/$2
FINAL=$WORK/$3

echo "Check if the files exist..."
if [ -e $DATALIST ] && [ -d $FOLDER ]
then
    echo "The necessary file and folder are exist!"
else
    echo "Files doesn't exists!"
    exit 2
fi


echo "Start generating folder input list..."
FOLDERNAME=`ls $FOLDER`
cat >> $FOLDERLIST <<EOF
${FOLDERNAME}
EOF
echo "Done!"


echo "Start generating data input list..."
cp $DATALIST $NEWDATALIST
FILE=`ls $WORK`
for file in $FILE
do
    sed -i "s/.DAT/.txt/g" $NEWDATALIST
done
echo "Done!"


echo "Start renaming files and moving files to same directory..."
cp -r $FOLDER results_temp
cd $WORK/results_temp
iteration=0
lastfile=109 #need to check before use
while [ $iteration -lt $lastfile ]; 
do
    iteration=$(( iteration + 1 ))
    echo $iteration
    folder=`head -n $iteration $FOLDERLIST | tail -1`
    echo $folder
    oldfilename=`grep -a "Using input file" $folder/STDOUT | awk '{print $6}'`
    newfilename=`echo "$oldfilename" | cut -c20-` #need to check before use
    echo $newfilename
    mkdir -p $FINAL
    mv $folder/STDOUT $folder/$newfilename
    mv $folder/$newfilename $FINAL
done
cd $FINAL
for i in *.DAT ; do
    echo "processing $i"
    mv $i `basename $i .DAT`.txt
done
echo "Done!"


echo "Start grabbing data from files..."
iteration=0
lastfile=109 #need to check before use
while [ $iteration -lt $lastfile ]; 
do 
    iteration=$(( iteration + 1 ))
    echo $iteration
    filename=`head -n $iteration $NEWDATALIST | tail -1`
    echo $filename
    newname=`echo $filename | sed "s/.txt//" | sed "s/cut//" | sed "s/cut//"`

       lhapdf=`echo $newname | awk -F '_' '{print $1}'`
        nproc=`echo $newname | awk -F '_' '{print $2}'`
        scale=`echo $newname | awk -F '_' '{print $3}'`
     facscale=`echo $newname | awk -F '_' '{print $4}'`
     dynscale=`echo $newname | awk -F '_' '{print $5}'`
        min34=`echo $newname | awk -F '_' '{print $6}'`
        min56=`echo $newname | awk -F '_' '{print $7}'`
       string=`echo $newname | awk -F '_' '{print $8}'`

       if [ $lhapdf = "NNPDF" ]; then
	   central=`grep -a "Central value" $filename | tail -1 | awk '{print $4}'`
	   erresti_plus=0
	   erresti_minus=0
	   erresti=`grep -a "Err estimate" $filename | tail -1 | awk '{print $5}'`
       else
	   central=`grep -a "Central value" $filename | head -1 | awk '{print $4}'`
	   erresti_plus=`grep -a "ve direction" $filename | head -1 | awk '{print $4}'`
	   erresti_minus=`grep -a "ve direction" $filename | tail -1 | awk '{print $4}'`
	   erresti=0
       fi


    cat >> "$3.txt" <<EOF
${lhapdf}	 ${nproc}	 ${scale}	 ${facscale}	 ${dynscale}	 ${min34}	 ${min56}	 ${string}	  ${central}   	  ${erresti_plus}     	   ${erresti_minus}    	${erresti}
EOF
done
echo "Done!"


echo "Remove useless files..."
rm -r $FOLDERLIST $NEWDATALIST $WORK/results_temp
mv $3.txt $WORK
echo "Done!"

exit
